@page "/fetchdata"
@inject HttpClient Http

@using P1.Interview.Domain
 
<h1>P1 Investment Interview Demo</h1>

<p>Random N portfolios...</p>

@if (portfolioAggregate == null)
{
    <p><em>Loading portfolios...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Portfolio Id</th>
                <th>Status</th>
                <th>No. Accounts</th>
                <th>Name</th>
                <th>Currency</th>
                <th>Value</th>
                <th>Uninvested Cash</th>
                <th>Growth</th>
                <th>Growth Percent</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var portfolio in portfolioAggregate.Portfolios)
            {
                <tr>
                    <td>@portfolio.Id</td>
                    <td>@portfolio.Status</td>
                    <td>@portfolio.Accounts</td>
                    <td>@portfolio.Name</td>
                    <td>@portfolio.Currency</td>
                    <td>@portfolio.CurrentValue</td>
                    <td>@portfolio.UninvestedCash</td>
                    <td>@portfolio.Growth</td>
                    <td>@portfolio.GrowthPercent</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>Aggregate Value: @portfolioAggregate.AggregateValue</td>
            </tr>
        </tfoot>
    </table>
}

@code {
    private PortfolioAggregate portfolioAggregate;

    protected override async Task OnInitializedAsync()
    {
        portfolioAggregate = await Http.GetFromJsonAsync<PortfolioAggregate>("/Portfolio?sampleSize=3");
    }
}