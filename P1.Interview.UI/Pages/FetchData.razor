@page "/fetchdata"
@inject HttpClient Http

@using P1.Interview.Domain
@using System.Text.Json;

<h1>P1 Investment Interview Demo</h1>

<p>Random N portfolios...</p>


<p><em>How many random portfolios would you like to retrieve?</em></p>
<p><input type="text" @bind="Samples" disabled="@IsLoading" /></p>
<p><button @onclick="LoadPortfolios" disabled="@IsLoading">Load portfolios</button></p>

@if (portfolioAggregate != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Portfolio Id</th>
                <th>Status</th>
                <th>No. Accounts</th>
                <th>Name</th>
                <th>Currency</th>
                <th>Value</th>
                <th>Uninvested Cash</th>
                <th>Growth</th>
                <th>Growth Percent</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var portfolio in portfolioAggregate.Portfolios)
            {
                <tr>
                    <td>@portfolio.Id</td>
                    <td>@portfolio.Status</td>
                    <td>@portfolio.Accounts</td>
                    <td>@portfolio.Name</td>
                    <td>@portfolio.Currency</td>
                    <td>@portfolio.CurrentValue</td>
                    <td>@portfolio.UninvestedCash</td>
                    <td>@portfolio.Growth</td>
                    <td>@portfolio.GrowthPercent</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>Aggregate Value: @portfolioAggregate.AggregateValue</td>
            </tr>
        </tfoot>
    </table>
}

@code {
    [Parameter]
    public string Samples { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public PortfolioAggregate portfolioAggregate { get; set; }

    private async Task LoadPortfolios()
    {
        IsLoading = true;

        try
        {
            portfolioAggregate = await Http.GetFromJsonAsync<PortfolioAggregate>($"/Portfolio/GetRandomPortfolios?sampleSize={Samples}");
        }
        catch (Exception e)
        {
            Console.WriteLine($"There was an error! {e.Message}");
        }

        IsLoading = false;
    }
}